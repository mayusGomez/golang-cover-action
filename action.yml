name: 'Cover golang package'
description: 'make a validation of coverage of a package and evaluate if is greather than a value'
inputs:
  project-folder:  
    description: 'Folder where is located the main module'
    required: true
  pakage-to-check:  
    description: 'package with files to test'
    required: true
  min-coverage:  
    description: 'Min value to accept unit test'
    required: true

runs:
  using: "composite"
  steps:
    - name: cover profile
      env:
        PROJECT_FOLDER: ${{ inputs.project-folder }}
        PACK_CHECK: ${{ inputs.pakage-to-check }}
        MIN_COVERAGE: ${{ inputs.min-coverage }}
      shell: bash
      run: |
        cd "$PROJECT_FOLDER" 
        go test -coverprofile=coverage.out -covermode=count "$PACK_CHECK"
        go tool cover -func coverage.out

        total=$(go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+')
        echo "Total coverage: $total"
        if (( $(echo "$total > ${{ inputs.min-coverage }}" | bc -l) )) 
        then 
          echo "Coverage OK" 
        else 
          echo "Coverage FAIL, lower than ${{ inputs.min-coverage }}" 
          exit 1
        fi
